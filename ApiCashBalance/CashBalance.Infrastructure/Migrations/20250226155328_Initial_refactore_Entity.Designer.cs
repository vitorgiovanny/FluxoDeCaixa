// <auto-generated />
using System;
using CashBalance.Infrastructure.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CashBalance.Infrastructure.Migrations
{
    [DbContext(typeof(CashBalanceContext))]
    [Migration("20250226155328_Initial_refactore_Entity")]
    partial class Initial_refactore_Entity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CashBalance.Domain.Entities.Cash", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("AtLastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CashierId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CashierId");

                    b.ToTable("Cash", (string)null);
                });

            modelBuilder.Entity("CashBalance.Domain.Entities.Cashier", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CashId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CashId");

                    b.ToTable("Cashiers");
                });

            modelBuilder.Entity("CashBalance.Domain.Entities.Extract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("AtDelete")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("IdCash")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdCashier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Register")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdCash");

                    b.HasIndex("IdCashier");

                    b.ToTable("Extracts");
                });

            modelBuilder.Entity("CashBalance.Domain.Entities.Cash", b =>
                {
                    b.HasOne("CashBalance.Domain.Entities.Cashier", "Cashier")
                        .WithMany()
                        .HasForeignKey("CashierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("CashBalance.Domain.ObjectValue.Money", "Amount", b1 =>
                        {
                            b1.Property<Guid>("CashId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<double>("Value")
                                .HasColumnType("float")
                                .HasColumnName("Amount");

                            b1.HasKey("CashId");

                            b1.ToTable("Cash");

                            b1.WithOwner()
                                .HasForeignKey("CashId");
                        });

                    b.Navigation("Amount")
                        .IsRequired();

                    b.Navigation("Cashier");
                });

            modelBuilder.Entity("CashBalance.Domain.Entities.Cashier", b =>
                {
                    b.HasOne("CashBalance.Domain.Entities.Cash", null)
                        .WithMany("Cashiers")
                        .HasForeignKey("CashId");
                });

            modelBuilder.Entity("CashBalance.Domain.Entities.Extract", b =>
                {
                    b.HasOne("CashBalance.Domain.Entities.Cash", "Cash")
                        .WithMany("Extracts")
                        .HasForeignKey("IdCash")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CashBalance.Domain.Entities.Cashier", "Cashier")
                        .WithMany("Extracts")
                        .HasForeignKey("IdCashier")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cash");

                    b.Navigation("Cashier");
                });

            modelBuilder.Entity("CashBalance.Domain.Entities.Cash", b =>
                {
                    b.Navigation("Cashiers");

                    b.Navigation("Extracts");
                });

            modelBuilder.Entity("CashBalance.Domain.Entities.Cashier", b =>
                {
                    b.Navigation("Extracts");
                });
#pragma warning restore 612, 618
        }
    }
}
